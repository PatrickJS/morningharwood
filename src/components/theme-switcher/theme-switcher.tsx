import { $, component$, useOnDocument, useSignal } from "@builder.io/qwik";
import type { Signal } from "@builder.io/qwik";
import type { ThemeSwitcherProps } from "./types";

const LightMode = component$(() => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="28"
      height="28"
      viewBox="0 0 28 28"
      fill="none"
    >
      <rect width="28" height="28" fill="none" />
      <path
        d="M14 6C14.1632 6 14.3197 6.06483 14.4351 6.18024C14.5505 6.29565 14.6154 6.45217 14.6154 6.61538V8.46154C14.6154 8.62475 14.5505 8.78127 14.4351 8.89668C14.3197 9.01209 14.1632 9.07692 14 9.07692C13.8368 9.07692 13.6803 9.01209 13.5649 8.89668C13.4495 8.78127 13.3846 8.62475 13.3846 8.46154V6.61538C13.3846 6.45217 13.4495 6.29565 13.5649 6.18024C13.6803 6.06483 13.8368 6 14 6ZM10.3077 14C10.3077 13.0207 10.6967 12.0816 11.3891 11.3891C12.0816 10.6967 13.0207 10.3077 14 10.3077C14.9793 10.3077 15.9184 10.6967 16.6109 11.3891C17.3033 12.0816 17.6923 13.0207 17.6923 14C17.6923 14.9793 17.3033 15.9184 16.6109 16.6109C15.9184 17.3033 14.9793 17.6923 14 17.6923C13.0207 17.6923 12.0816 17.3033 11.3891 16.6109C10.6967 15.9184 10.3077 14.9793 10.3077 14ZM19.6566 9.21313C19.7653 9.09647 19.8245 8.94218 19.8217 8.78275C19.8189 8.62332 19.7543 8.47121 19.6415 8.35846C19.5288 8.24572 19.3767 8.18113 19.2172 8.17832C19.0578 8.17551 18.9035 8.23468 18.7869 8.34338L17.4814 9.648C17.4226 9.70474 17.3757 9.77262 17.3434 9.84769C17.3111 9.92275 17.2941 10.0035 17.2934 10.0852C17.2926 10.1669 17.3082 10.248 17.3391 10.3236C17.37 10.3992 17.4156 10.468 17.4734 10.5258C17.5311 10.5836 17.5998 10.6293 17.6755 10.6603C17.7511 10.6913 17.8321 10.7069 17.9138 10.7062C17.9955 10.7055 18.0763 10.6886 18.1514 10.6564C18.2265 10.6242 18.2944 10.5773 18.3512 10.5186L19.6566 9.21313ZM22 14C22 14.1632 21.9352 14.3197 21.8198 14.4351C21.7044 14.5505 21.5478 14.6154 21.3846 14.6154H19.5385C19.3753 14.6154 19.2187 14.5505 19.1033 14.4351C18.9879 14.3197 18.9231 14.1632 18.9231 14C18.9231 13.8368 18.9879 13.6803 19.1033 13.5649C19.2187 13.4495 19.3753 13.3846 19.5385 13.3846H21.3846C21.5478 13.3846 21.7044 13.4495 21.8198 13.5649C21.9352 13.6803 22 13.8368 22 14ZM18.7869 19.6566C18.9035 19.7653 19.0578 19.8245 19.2172 19.8217C19.3767 19.8189 19.5288 19.7543 19.6415 19.6415C19.7543 19.5288 19.8189 19.3767 19.8217 19.2172C19.8245 19.0578 19.7653 18.9035 19.6566 18.7869L18.352 17.4814C18.2953 17.4226 18.2274 17.3757 18.1523 17.3434C18.0773 17.3111 17.9965 17.2941 17.9148 17.2934C17.8331 17.2926 17.752 17.3082 17.6764 17.3391C17.6008 17.37 17.532 17.4156 17.4742 17.4734C17.4164 17.5311 17.3707 17.5998 17.3397 17.6755C17.3087 17.7511 17.2931 17.8321 17.2938 17.9138C17.2945 17.9955 17.3114 18.0763 17.3436 18.1514C17.3758 18.2265 17.4227 18.2944 17.4814 18.3512L18.7869 19.6566ZM14 18.9231C14.1632 18.9231 14.3197 18.9879 14.4351 19.1033C14.5505 19.2187 14.6154 19.3753 14.6154 19.5385V21.3846C14.6154 21.5478 14.5505 21.7044 14.4351 21.8198C14.3197 21.9352 14.1632 22 14 22C13.8368 22 13.6803 21.9352 13.5649 21.8198C13.4495 21.7044 13.3846 21.5478 13.3846 21.3846V19.5385C13.3846 19.3753 13.4495 19.2187 13.5649 19.1033C13.6803 18.9879 13.8368 18.9231 14 18.9231ZM10.5194 18.3512C10.6314 18.2351 10.6934 18.0796 10.6919 17.9182C10.6904 17.7569 10.6256 17.6026 10.5115 17.4885C10.3973 17.3745 10.243 17.3098 10.0816 17.3085C9.92025 17.3072 9.76483 17.3693 9.64882 17.4814L8.34338 18.7861C8.23123 18.9021 8.16913 19.0575 8.17046 19.2188C8.17178 19.3802 8.23643 19.5346 8.35047 19.6487C8.46452 19.7629 8.61883 19.8277 8.78018 19.8291C8.94154 19.8306 9.09701 19.7687 9.21313 19.6566L10.5186 18.352L10.5194 18.3512ZM9.07692 14C9.07692 14.1632 9.01209 14.3197 8.89668 14.4351C8.78127 14.5505 8.62475 14.6154 8.46154 14.6154H6.61538C6.45217 14.6154 6.29565 14.5505 6.18024 14.4351C6.06483 14.3197 6 14.1632 6 14C6 13.8368 6.06483 13.6803 6.18024 13.5649C6.29565 13.4495 6.45217 13.3846 6.61538 13.3846H8.46154C8.62475 13.3846 8.78127 13.4495 8.89668 13.5649C9.01209 13.6803 9.07692 13.8368 9.07692 14ZM9.64882 10.5186C9.76548 10.6273 9.91977 10.6864 10.0792 10.6836C10.2386 10.6808 10.3907 10.6162 10.5035 10.5035C10.6162 10.3907 10.6808 10.2386 10.6836 10.0792C10.6864 9.91977 10.6273 9.76548 10.5186 9.64882L9.21395 8.34338C9.09794 8.23123 8.94252 8.16913 8.78117 8.17046C8.61981 8.17178 8.46544 8.23643 8.35128 8.35047C8.23713 8.46452 8.17234 8.61883 8.17086 8.78018C8.16939 8.94154 8.23134 9.09701 8.34338 9.21313L9.64882 10.5186Z"
        fill="black"
      />
    </svg>
  );
});

const DarkMode = component$(() => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="28"
      height="28"
      viewBox="0 0 28 28"
      fill="none"
    >
      <rect width="28" height="28" fill="none" />
      <path
        d="M22 16.8823C20.9857 17.305 19.8975 17.522 18.7986 17.5205C14.2039 17.5205 10.4795 13.7961 10.4795 9.20136C10.4795 8.06655 10.7065 6.98549 11.1177 6C9.60194 6.63235 8.30714 7.69911 7.39644 9.06592C6.48574 10.4327 5.99986 12.0385 6 13.6809C6 18.2756 9.7244 22 14.3191 22C15.9615 22.0001 17.5673 21.5143 18.9341 20.6036C20.3009 19.6929 21.3677 18.3981 22 16.8823Z"
        fill="white"
      />
    </svg>
  );
});

const ThemeSwitcher = component$<ThemeSwitcherProps>(() => {
  const themeSig: Signal<string> = useSignal("dark");
  useOnDocument(
    "DOMContentLoaded",
    $(() => {
      const themeFromStorage =
        localStorage.getItem("theme") ??
        (window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light");
      themeSig.value = themeFromStorage;
    }),
  );

  return (
    <button
      class="relative flex h-7 w-7"
      onClick$={() => {
        themeSig.value = themeSig.value == "dark" ? "light" : "dark";
        localStorage.setItem("theme", themeSig.value);
        document.documentElement.setAttribute("class", themeSig.value);
      }}
    >
      {themeSig.value === "dark" ? <DarkMode /> : <LightMode />}
    </button>
  );
});

export { ThemeSwitcher };
